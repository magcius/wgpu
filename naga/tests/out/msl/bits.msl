// language: metal1.2
#include <metal_stdlib>
#include <simd/simd.h>

using metal::uint;


kernel void main_(
) {
    int i = 0;
    metal::int2 i2_ = metal::int2(0);
    metal::int3 i3_ = metal::int3(0);
    metal::int4 i4_ = metal::int4(0);
    uint u = 0u;
    metal::uint2 u2_ = metal::uint2(0u);
    metal::uint3 u3_ = metal::uint3(0u);
    metal::uint4 u4_ = metal::uint4(0u);
    metal::float2 f2_ = metal::float2(0.0);
    metal::float4 f4_ = metal::float4(0.0);
    u = metal::pack_float_to_snorm4x8(f4_);
    u = metal::pack_float_to_unorm4x8(f4_);
    u = metal::pack_float_to_snorm2x16(f2_);
    u = metal::pack_float_to_unorm2x16(f2_);
    u = as_type<uint>(half2(f2_));
    metal::int4 _e38 = i4_;
    u = uint((_e38[0] & 0xFF) | ((_e38[1] & 0xFF) << 8) | ((_e38[2] & 0xFF) << 16) | ((_e38[3] & 0xFF) << 24));
    metal::uint4 _e40 = u4_;
    u = (_e40[0] & 0xFF) | ((_e40[1] & 0xFF) << 8) | ((_e40[2] & 0xFF) << 16) | ((_e40[3] & 0xFF) << 24);
    f4_ = metal::unpack_snorm4x8_to_float(u);
    f4_ = metal::unpack_unorm4x8_to_float(u);
    f2_ = metal::unpack_snorm2x16_to_float(u);
    f2_ = metal::unpack_unorm2x16_to_float(u);
    f2_ = float2(as_type<half2>(u));
    uint _e52 = u;
    i4_ = int4(_e52, _e52 >> 8, _e52 >> 16, _e52 >> 24) << 24 >> 24;
    uint _e54 = u;
    u4_ = uint4(_e54, _e54 >> 8, _e54 >> 16, _e54 >> 24) << 24 >> 24;
    i = metal::insert_bits(i, i, metal::min(5u, 32u), metal::min(10u, 32u - metal::min(5u, 32u)));
    i2_ = metal::insert_bits(i2_, i2_, metal::min(5u, 32u), metal::min(10u, 32u - metal::min(5u, 32u)));
    i3_ = metal::insert_bits(i3_, i3_, metal::min(5u, 32u), metal::min(10u, 32u - metal::min(5u, 32u)));
    i4_ = metal::insert_bits(i4_, i4_, metal::min(5u, 32u), metal::min(10u, 32u - metal::min(5u, 32u)));
    u = metal::insert_bits(u, u, metal::min(5u, 32u), metal::min(10u, 32u - metal::min(5u, 32u)));
    u2_ = metal::insert_bits(u2_, u2_, metal::min(5u, 32u), metal::min(10u, 32u - metal::min(5u, 32u)));
    u3_ = metal::insert_bits(u3_, u3_, metal::min(5u, 32u), metal::min(10u, 32u - metal::min(5u, 32u)));
    u4_ = metal::insert_bits(u4_, u4_, metal::min(5u, 32u), metal::min(10u, 32u - metal::min(5u, 32u)));
    i = metal::extract_bits(i, metal::min(5u, 32u), metal::min(10u, 32u - metal::min(5u, 32u)));
    i2_ = metal::extract_bits(i2_, metal::min(5u, 32u), metal::min(10u, 32u - metal::min(5u, 32u)));
    i3_ = metal::extract_bits(i3_, metal::min(5u, 32u), metal::min(10u, 32u - metal::min(5u, 32u)));
    i4_ = metal::extract_bits(i4_, metal::min(5u, 32u), metal::min(10u, 32u - metal::min(5u, 32u)));
    u = metal::extract_bits(u, metal::min(5u, 32u), metal::min(10u, 32u - metal::min(5u, 32u)));
    u2_ = metal::extract_bits(u2_, metal::min(5u, 32u), metal::min(10u, 32u - metal::min(5u, 32u)));
    u3_ = metal::extract_bits(u3_, metal::min(5u, 32u), metal::min(10u, 32u - metal::min(5u, 32u)));
    u4_ = metal::extract_bits(u4_, metal::min(5u, 32u), metal::min(10u, 32u - metal::min(5u, 32u)));
    i = (((metal::ctz(i) + 1) % 33) - 1);
    u2_ = (((metal::ctz(u2_) + 1) % 33) - 1);
    metal::int3 _e132 = i3_;
    i3_ = metal::select(31 - metal::clz(metal::select(_e132, ~_e132, _e132 < 0)), int3(-1), _e132 == 0 || _e132 == -1);
    metal::uint3 _e134 = u3_;
    u3_ = metal::select(31 - metal::clz(_e134), uint3(-1), _e134 == 0 || _e134 == -1);
    int _e136 = i;
    i = metal::select(31 - metal::clz(metal::select(_e136, ~_e136, _e136 < 0)), int(-1), _e136 == 0 || _e136 == -1);
    uint _e138 = u;
    u = metal::select(31 - metal::clz(_e138), uint(-1), _e138 == 0 || _e138 == -1);
    i = metal::popcount(i);
    i2_ = metal::popcount(i2_);
    i3_ = metal::popcount(i3_);
    i4_ = metal::popcount(i4_);
    u = metal::popcount(u);
    u2_ = metal::popcount(u2_);
    u3_ = metal::popcount(u3_);
    u4_ = metal::popcount(u4_);
    i = metal::reverse_bits(i);
    i2_ = metal::reverse_bits(i2_);
    i3_ = metal::reverse_bits(i3_);
    i4_ = metal::reverse_bits(i4_);
    u = metal::reverse_bits(u);
    u2_ = metal::reverse_bits(u2_);
    u3_ = metal::reverse_bits(u3_);
    u4_ = metal::reverse_bits(u4_);
    return;
}
