// language: metal1.0
#include <metal_stdlib>
#include <simd/simd.h>

using metal::uint;

struct type_3 {
    uint inner[64];
};
constant float plus_fafaf_1 = 3.0;
constant float plus_fafai_1 = 3.0;
constant float plus_faf_f_1 = 3.0;
constant float plus_faiaf_1 = 3.0;
constant float plus_faiai_1 = 3.0;
constant float plus_fai_f_1 = 3.0;
constant float plus_f_faf_1 = 3.0;
constant float plus_f_fai_1 = 3.0;
constant float plus_f_f_f_1 = 3.0;
constant int plus_iaiai_1 = 3;
constant int plus_iai_i_1 = 3;
constant int plus_i_iai_1 = 3;
constant int plus_i_i_i_1 = 3;
constant uint plus_uaiai_1 = 3u;
constant uint plus_uai_u_1 = 3u;
constant uint plus_u_uai_1 = 3u;
constant uint plus_u_u_u_1 = 3u;
constant uint bitflip_u_u = 0u;
constant uint bitflip_uai = 0u;
constant int least_i32_ = -2147483648;
constant float least_f32_ = -340282350000000000000000000000000000000.0;
constant int wgpu_4492_ = -2147483648;
constant int wgpu_4492_2_ = -2147483648;

void runtime_values(
) {
    float f = 42.0;
    int i = 43;
    uint u = 44u;
    float plus_fafaf = 3.0;
    float plus_fafai = 3.0;
    float plus_faf_f = {};
    float plus_faiaf = 3.0;
    float plus_faiai = 3.0;
    float plus_fai_f = {};
    float plus_f_faf = {};
    float plus_f_fai = {};
    float plus_f_f_f = {};
    int plus_iaiai = 3;
    int plus_iai_i = {};
    int plus_i_iai = {};
    int plus_i_i_i = {};
    uint plus_uaiai = 3u;
    uint plus_uai_u = {};
    uint plus_u_uai = {};
    uint plus_u_u_u = {};
    plus_faf_f = 1.0 + f;
    plus_fai_f = 1.0 + f;
    plus_f_faf = f + 2.0;
    plus_f_fai = f + 2.0;
    plus_f_f_f = f + f;
    plus_iai_i = 1 + i;
    plus_i_iai = i + 2;
    plus_i_i_i = i + i;
    plus_uai_u = 1u + u;
    plus_u_uai = u + 2u;
    plus_u_u_u = u + u;
    return;
}

void wgpu_4445_(
) {
    return;
}

void wgpu_4435_(
    threadgroup type_3& a
) {
    uint y = a.inner[1 - 1];
}
